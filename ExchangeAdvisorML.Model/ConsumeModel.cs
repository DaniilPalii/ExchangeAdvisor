// This file was auto-generated by ML.NET Model Builder. 

using Microsoft.ML;
using System;
using System.Collections.Generic;

namespace ExchangeAdvisor.ML.Model
{
    public class ConsumeModel
    {
        public static ModelOutput Predict(ModelInput input)
        {
            var predictionEngine = CreatePredictionEngine();

            return predictionEngine.Predict(input);
        }

        public static IEnumerable<(ModelInput, ModelOutput)> Predict(IEnumerable<ModelInput> inputs)
        {
            var predictionEngine = CreatePredictionEngine();

            foreach (var input in inputs)
            {
                var prediction = predictionEngine.Predict(input);

                yield return (input, prediction);
            }
        }

        private static PredictionEngine<ModelInput, ModelOutput> CreatePredictionEngine()
        {
            var mlContext = new MLContext();
            var modelPath = AppDomain.CurrentDomain.BaseDirectory + "MLModel.zip";
            var mlModel = mlContext.Model.Load(modelPath, out var _);

            return mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);
        }

        // For more info on consuming ML.NET models, visit https://aka.ms/model-builder-consume
    }
}
